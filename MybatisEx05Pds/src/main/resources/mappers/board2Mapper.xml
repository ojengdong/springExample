<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- namespace는 반드시 DAO인터페이스와 이름이 일치해야 한다. -->
<mapper namespace="kr.kdata.pds.dao.Board2DAO">
	<!-- 매퍼파일에 태그 1개당 DAO인터페이스의 메서드 1개를 만든다. -->
	<!-- SQL명령 1개당 태그 1개씩을 추가한다. -->

	<!-- 1. 전체 개수 얻기  -->
	<select id="selectCount" resultType="int">
		select count(*) from board2
	</select>
	<!-- 2. 1개 얻기  -->
	<select id="selectById" parameterType="int" resultType="Board2VO">
		select * from board2 where id=#{id}
	</select>
	<!-- 3. 1페이지 얻기  -->
	<select id="selectList" parameterType="hashmap" resultType="Board2VO">
		select 
			Q.*
		from
			(select
				rownum rnum, R.*
			from
				(select * from board2 order by id desc) R
			where
				<![CDATA[
					rownum <= #{endNo}
				]]>
			) Q
		where
			<![CDATA[
				rnum >= #{startNo}
			]]>
	</select>
	<!-- 4. 저장하기  -->
	<insert id="insert" parameterType="Board2VO">
		insert into board2 values
		(board2_id_seq.nextval, #{name},#{password},#{subject},#{content},sysdate,0,#{ip})
	</insert>
	<!-- 5. 수정하기  -->
	<update id="update" parameterType="Board2VO">
		update board2 set
		subject = #{subject}, content=#{content}, regdate=sysdate, ip=#{ip}
		where id = #{id}
	</update>
	<!-- 6. 삭제하기  -->
	<delete id="delete" parameterType="int">
		delete from board2 where id=#{id}
	</delete>
	<!-- 7. 조회수 증가하기  -->
	<update id="updateReadCount" parameterType="int">
		update board2 set readCount = readCount + 1 where id=#{id}
	</update>
</mapper>